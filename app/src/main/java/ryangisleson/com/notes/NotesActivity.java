package ryangisleson.com.notes;

import android.app.SearchManager;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ListView;
import android.widget.SearchView;

import java.util.ArrayList;

public class NotesActivity extends AppCompatActivity {
    static final int EDIT_NOTE = 1;

    FloatingActionButton addButton;
    ListView noteList;
    ArrayList<Note> notes;
    NoteAdapter noteAdapter;
    NoteDbHelper db;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_notes);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        noteList = (ListView) findViewById(R.id.note_list);
        db = new NoteDbHelper(this, null, null, 2);
        handleIntent(getIntent());

        addButton = (FloatingActionButton) findViewById(R.id.add_button);
        addButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                addNote();
            }
        });
    }

    @Override
    protected void onNewIntent(Intent intent) {
        handleIntent(intent);
    }

    private void handleIntent(Intent intent) {
        if (Intent.ACTION_SEARCH.equals(intent.getAction())) {
            String query = intent.getStringExtra(SearchManager.QUERY);
            notes = db.searchNotes(query);
            noteAdapter = new NoteAdapter(this, notes);
            noteList.setAdapter(noteAdapter);
        } else {
            getNotesAndSetAdapter();
        }
    }

    private void getNotesAndSetAdapter() {
        notes = db.getNotes();
        noteAdapter = new NoteAdapter(this, notes);
        noteList.setAdapter(noteAdapter);
    }

    public void editNote(Note note) {
        Intent i = new Intent(this, NoteView.class);
        int noteIndex = notes.indexOf(note);
        i.putExtra("note", note);
        i.putExtra("noteIndex", noteIndex);
        startActivityForResult(i, EDIT_NOTE);
    }

    public void addNote() {
        Note note = new Note();
        Intent i = new Intent(this, NoteView.class);
        notes.add(0, note);
        note._id = db.addNote(note); // set the note's id to the one generated by db
        editNote(note);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        Bundle extras = data.getExtras(); // values passed back from editing or adding a note
        if (requestCode == EDIT_NOTE) {
            if (resultCode == RESULT_OK) {
                if (extras.getBoolean("deleted")) {
                    Note deletedNote = notes.remove(extras.getInt("noteIndex"));
                    db.deleteNote(deletedNote);
                } else {
                    Note updatedNote = extras.getParcelable("note");
                    notes.set(extras.getInt("noteIndex"), updatedNote);
                    db.updateNote(updatedNote);
                }
                noteAdapter.notifyDataSetChanged();
            }
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.options_menu, menu);

        SearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);
        final MenuItem searchMenuItem = menu.findItem(R.id.search);
        final android.support.v7.widget.SearchView searchView =
                (android.support.v7.widget.SearchView) searchMenuItem.getActionView();
        searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));
        searchView.setIconifiedByDefault(false);

        // reloads all notes when search is closed
        searchView.setOnQueryTextFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View view, boolean queryTextFocused) {
                if(!queryTextFocused) {
                    searchMenuItem.collapseActionView();
                    searchView.setQuery("", false);
                    getNotesAndSetAdapter();
                }
            }
        });

        searchView.onActionViewCollapsed();
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        switch (id) {
            case R.id.action_settings:
                break;
        }

        return super.onOptionsItemSelected(item);
    }
}
